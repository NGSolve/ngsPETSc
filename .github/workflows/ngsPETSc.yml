# .github/workflows/app.yaml
name: ngsPETSc tests
on: 
    push:
      branches-ignore:    
      - 'no-ci/*'

    schedule:
    - cron:  '30 10 7,14,21,28 * *'

jobs:
  ngsolve:
    runs-on: ubuntu-latest
    container: urzerbinati/ngspetsc:latest
    timeout-minutes: 30

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install ngsPETSc
        run: |
          python -m pip install .

      - name: Check formatting
        run: |
          make lint
          make lint_test

      - name: Run test suite in serial
        run: |
          pytest -v tests/test_env.py
          pytest -v tests/test_vec.py
          pytest -v tests/test_mat.py
          pytest -v tests/test_plex.py
          pytest -v tests/test_ksp.py
          pytest -v tests/test_pc.py
          pytest -v tests/test_eps.py
          pytest -v tests/test_snes.py

      - name: Run test suite in parallel
        run: |
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_env.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_vec.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_mat.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_plex.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_ksp.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_pc.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_eps.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_snes.py

  fenicsx:
    runs-on: ubuntu-latest
    container: dolfinx/dolfinx:latest
    timeout-minutes: 30

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install Netgen and ngsPETSc
        run: |
          pip3 install netgen-mesher \
          && pip3 install pylint \
          && export PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.10/site-packages \
          && echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV \
          && NGSPETSC_NO_INSTALL_REQUIRED=ON pip install .

      - name: Check formatting
        run: |
          make lint
          make lint_test

      - name: Run test suite in serial
        run: |
          pytest -v tests/test_fenicsx.py

  firedrake:
    runs-on: ubuntu-latest
    container: firedrakeproject/firedrake:latest
    strategy:
      # Don't immediately kill real if complex fails and vice versa.
      fail-fast: false
      matrix:
        include:
          - scalar-type: real
            complex: ""
            petsc_arch: default
          - scalar-type: complex
            complex: --complex
            petsc_arch: complex
    env:
      # PETSC_DIR and MPICH_DIR are set inside the docker image
      FIREDRAKE_CI_TESTS: 1
      PETSC_ARCH: ${{ matrix.petsc_arch }}
      OMP_NUM_THREADS: 1
      OPENBLAS_NUM_THREADS: 1
      COMPLEX: ${{ matrix.complex }}
      RDMAV_FORK_SAFE: 1

    steps:
      - name: Check out repository code
        run: cd /home/firedrake && git clone https://github.com/NGSolve/ngsPETSc.git

      - name: Install ngsPETSc and pytest
        run: |
          . /home/firedrake/firedrake/bin/activate \
          && cd /home/firedrake/ngsPETSc \
          && NGSPETSC_NO_INSTALL_REQUIRED=ON python3 -m pip install . \
          && sudo apt update && sudo apt install -y python3-pytest

      - name: Run test suite in serial
        run: |
          . /home/firedrake/firedrake/bin/activate \
          && cd /home/firedrake/ngsPETSc \
          && python3 tests/test_firedrake.py
          
