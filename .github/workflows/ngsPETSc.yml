# .github/workflows/app.yaml
name: ngsPETSc tests
on:
    pull_request:
      types: [synchronize]

    push:
      branches-ignore:
      - 'no-ci/*'

    schedule:
    - cron:  '30 10 7,14,21,28 * *'

jobs:
  lint:
    runs-on: ubuntu-latest
    container: urzerbinati/ngspetsc:latest
    timeout-minutes: 3

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install ngsPETSc
        run: |
          python -m pip install .
          pip install pylint

      - name: Lint
        run: |
          make lint GITHUB_ACTIONS_FORMATTING=1
          make lint_test GITHUB_ACTIONS_FORMATTING=1

  ngsolve:
    runs-on: ubuntu-latest
    container: urzerbinati/ngspetsc:latest
    timeout-minutes: 30

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install ngsPETSc
        run: |
          python -m pip install .

      - name: Run test suite in serial
        run: |
          pytest -v tests/test_env.py
          pytest -v tests/test_vec.py
          pytest -v tests/test_mat.py
          pytest -v tests/test_plex.py
          pytest -v tests/test_ksp.py
          pytest -v tests/test_pc.py
          pytest -v tests/test_eps.py
          pytest -v tests/test_snes.py

      - name: Run test suite in parallel
        run: |
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_env.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_vec.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_mat.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_plex.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_ksp.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_pc.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_eps.py
          mpirun --allow-run-as-root -n 2 pytest -v --with-mpi tests/test_snes.py

  firedrake:
    runs-on: ubuntu-latest
    container:
      image: firedrakeproject/firedrake-vanilla-default:latest
      options: --user root
    timeout-minutes: 50
    env:
      GITHUB_WORKSPACE: $HOME
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Add SLEPc to vanilla Firedrake
        run: |
          cd $HOME
          pip install --no-build-isolation mpi4py randomgen numpy slepc4py

      - name: Install Netgen and ngsPETSc
        run: |
          cd /__w/ngsPETSc/ngsPETSc
          pip install --no-build-isolation xdist pytest-timeout ipympl poetry
          ls
          pip install .

      - name: Run part of the Firedrake test suite
        run: |
          cd $HOME
          git clone https://github.com/firedrakeproject/firedrake.git
          cd firedrake
          git checkout release
          pytest -m "not parallel" tests/firedrake/regression/test_poisson_strong_bcs.py
          mpirun --allow-run-as-root -n 2 pytest -m "parallel" tests/firedrake/regression/test_poisson_strong_bcs.py
          pytest -m "not parallel" tests/firedrake/multigrid/test_netgen_gmg.py
          mpirun --allow-run-as-root -n 2 pytest -m "parallel" tests/firedrake/multigrid/test_netgen_gmg.py
          pytest -m "not parallel" tests/firedrake/regression/test_netgen.py
          mpirun --allow-run-as-root -n 2 pytest -m "parallel" tests/firedrake/regression/test_netgen.py

  firedrake-complex:
    runs-on: ubuntu-latest
    container:
      image: firedrakeproject/firedrake-vanilla-complex:latest
      options: --user root
    timeout-minutes: 50
    env:
      GITHUB_WORKSPACE: $HOME
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Add SLEPc to vanilla Firedrake
        run: |
          cd $HOME
          pip install --no-build-isolation mpi4py randomgen numpy slepc4py

      - name: Install Netgen and ngsPETSc
        run: |
          cd /__w/ngsPETSc/ngsPETSc
          pip install --no-build-isolation xdist pytest-timeout ipympl poetry
          ls
          pip install .

      - name: Run part of the Firedrake test suite
        run: |
          cd $HOME
          git clone https://github.com/firedrakeproject/firedrake.git
          cd firedrake
          git checkout release
          pytest -m "not parallel" tests/firedrake/regression/test_poisson_strong_bcs.py
          mpirun --allow-run-as-root -n 2 pytest -m "parallel" tests/firedrake/regression/test_poisson_strong_bcs.py
          pytest -m "not parallel" tests/firedrake/multigrid/test_netgen_gmg.py
          mpirun --allow-run-as-root -n 2 pytest -m "parallel" tests/firedrake/multigrid/test_netgen_gmg.py
          pytest -m "not parallel" tests/firedrake/regression/test_netgen.py
          mpirun --allow-run-as-root -n 2 pytest -m "parallel" tests/firedrake/regression/test_netgen.py
  
  fenicsx-stable:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/fenics/dolfinx/dolfinx:stable
    timeout-minutes: 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Install Netgen and ngsPETSc
        run: |
          python3 -m pip install --no-build-isolation pytest
          python3 -m pip install .

      - name: Run tests (serial)
        run: |
          python3 -m pytest -vs ./tests/test_fenicsx.py

  fenicsx-nightly:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/fenics/dolfinx/dolfinx:nightly
    timeout-minutes: 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Install Netgen and ngsPETSc
        run: |
          python3 -m pip install --no-build-isolation pytest
          python3 -m pip install .
     
      - name: Run tests (serial)
        run: |
          python3 -m pytest -vs ./tests/test_fenicsx.py

